{"remainingRequest":"D:\\ZJNU\\SoftwareProject\\x-admin-web\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\ZJNU\\SoftwareProject\\x-admin-web\\src\\views\\test\\test5.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\ZJNU\\SoftwareProject\\x-admin-web\\src\\views\\test\\test5.vue","mtime":1701656784603},{"path":"D:\\ZJNU\\SoftwareProject\\x-admin-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\ZJNU\\SoftwareProject\\x-admin-web\\node_modules\\babel-loader\\lib\\index.js","mtime":456789000000},{"path":"D:\\ZJNU\\SoftwareProject\\x-admin-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\ZJNU\\SoftwareProject\\x-admin-web\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmNvbnN0IG5ld0VsZW1lbnQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdoMicpOwppbXBvcnQgUmVxdWVzdCBmcm9tICJAL3V0aWxzL3JlcXVlc3QiOwppbXBvcnQgYXhpb3MgZnJvbSAiYXhpb3MiOwpleHBvcnQgZGVmYXVsdCB7CgogIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICB2aWRlb1N0cmVhbTogbnVsbCwKICAgICAgYXZhdGFyOiAnaHR0cDovL2xvY2FsaG9zdDo5OTk5L2ZpbGUvZTlmNjhhZmFhNDRlNDcyYzhhN2MyYTQ2YWYwNGFhYzkuanBnJywKICAgICAgcGlwZWlsdjogMAogICAgfTsKICB9LAogIG1vdW50ZWQoKSB7CiAgICB0aGlzLnN0YXJ0Q2FtZXJhKCk7CiAgfSwKICBtZXRob2RzOiB7CiAgICBzdGFydENhbWVyYSgpIHsKICAgICAgbmF2aWdhdG9yLm1lZGlhRGV2aWNlcwogICAgICAgIC5nZXRVc2VyTWVkaWEoe3ZpZGVvOiB0cnVlfSkKICAgICAgICAudGhlbigoc3RyZWFtKSA9PiB7CiAgICAgICAgICB0aGlzLnZpZGVvU3RyZWFtID0gc3RyZWFtOwogICAgICAgICAgdGhpcy4kcmVmcy52aWRlby5zcmNPYmplY3QgPSBzdHJlYW07CiAgICAgICAgICAvLyDlvIDlp4vmkq3mlL7op4bpopEKICAgICAgICAgIHRoaXMuJHJlZnMudmlkZW8ucGxheSgpOwogICAgICAgIH0pCiAgICAgICAgLmNhdGNoKChlcnJvcikgPT4gewogICAgICAgICAgY29uc29sZS5sb2coZXJyb3IpOwogICAgICAgIH0pOwogICAgfSwKICAgIHN0YXJ0UmVjb2duaXRpb24oKSB7CiAgICAgIGNvbnN0IGNhbnZhcyA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2NhbnZhcycpOwogICAgICBjb25zdCBjdHggPSBjYW52YXMuZ2V0Q29udGV4dCgnMmQnKTsKCiAgICAgIC8vIOiuvue9rmNhbnZhc+eahOWuvemrmOWSjOinhumikea1geWuvemrmOS4gOiHtAogICAgICBjYW52YXMud2lkdGggPSB0aGlzLiRyZWZzLnZpZGVvLnZpZGVvV2lkdGg7CiAgICAgIGNhbnZhcy5oZWlnaHQgPSB0aGlzLiRyZWZzLnZpZGVvLnZpZGVvSGVpZ2h0OwogICAgICAvLyDnu5jliLbop4bpopHluKfliLBjYW52YXMKICAgICAgY3R4LmRyYXdJbWFnZSh0aGlzLiRyZWZzLnZpZGVvLCAwLCAwLCBjYW52YXMud2lkdGgsIGNhbnZhcy5oZWlnaHQpOwogICAgICAvLyDojrflj5bmiKrlj5bnmoTop4bpopHluKfnmoRiYXNlNjQgZGF0YSBVUkwKICAgICAgY29uc3QgZnJhbWVEYXRhVXJsID0gY2FudmFzLnRvRGF0YVVSTCgnaW1hZ2UvcG5nJyk7CiAgICAgIC8vIOWcqOaOp+WItuWPsOaJk+WNsOaIquWPlueahOinhumikeW4p+eahGRhdGEgVVJMCiAgICAgIGNvbnNvbGUubG9nKGZyYW1lRGF0YVVybCkKICAgICAgbGV0IGZvcm1EYXRhID0gbmV3IEZvcm1EYXRhKCk7CiAgICAgIGZvcm1EYXRhLmFwcGVuZCgiYmFzZTY0IiwgZnJhbWVEYXRhVXJsKTsKICAgICAgZm9ybURhdGEuYXBwZW5kKCJsb2NhbEltYWdlVXJsIix0aGlzLmF2YXRhcikKCiAgICAgIC8vIOWcqOi/memHjOe8luWGmeS6uuiEuOivhuWIq+eahOmAu+i+kQogICAgICBSZXF1ZXN0LnBvc3QoJy92aWRlby90b3JlbmxpYW5zaGliaWUnLCBmb3JtRGF0YSkudGhlbihyZXMgPT4gewogICAgICAgIGNvbnNvbGUubG9nKHJlcy5zcGxpdCgnIycpKQogICAgICAgIHZhciByZXNzID0gcmVzLnNwbGl0KCcjJyk7CiAgICAgICAgdGhpcy5waXBlaWx2ID0gcmVzc1sxXTsKICAgICAgICBpZiAocmVzc1swXSA9PT0gJ3RydWUnKXsKICAgICAgICAgIHRoaXMuJG1lc3NhZ2UoewogICAgICAgICAgICBtZXNzYWdlOiAi5oGt5Zac5L2g77yM5Lq66IS46K+G5Yir5oiQ5Yqf5ZWm77yB77yBIiwKICAgICAgICAgICAgdHlwZTogJ3N1Y2Nlc3MnCiAgICAgICAgICB9KTsKICAgICAgICAgIG5ld0VsZW1lbnQudGV4dENvbnRlbnQgPSAn5oGt5Zac5L2g77yM5Lq66IS46K+G5Yir5oiQ5Yqf5ZWm77yB77yB77yBJzsKICAgICAgICAgIG5ld0VsZW1lbnQuc3R5bGU9ImNvbG9yOiBncmVlbiI7CiAgICAgICAgICB0aGlzLiRyZWZzLnRpc2kuYXBwZW5kQ2hpbGQobmV3RWxlbWVudCk7CiAgICAgICAgfWVsc2UgewogICAgICAgICAgdGhpcy4kbWVzc2FnZS5lcnJvcign5b6I6YGX5oa+77yM5Lq66IS46K+G5Yir5aSx6LSl77yM6K+36YeN5paw6Z2i5ZCR5pGE5YOP5aS06K+G5Yir77yB77yB77yBJyk7CiAgICAgICAgICBuZXdFbGVtZW50LnRleHRDb250ZW50ID0gJ+W+iOmBl+aGvu+8jOS6uuiEuOivhuWIq+Wksei0pe+8jOivt+mHjeaWsOmdouWQkeaRhOWDj+WktOivhuWIq++8ge+8ge+8gSc7CiAgICAgICAgICBuZXdFbGVtZW50LnN0eWxlPSJjb2xvcjogcmVkIjsKICAgICAgICAgIHRoaXMuJHJlZnMudGlzaS5hcHBlbmRDaGlsZChuZXdFbGVtZW50KTsKICAgICAgICB9CiAgICAgIH0pCiAgICB9LAogICAgc3RvcFJlY29nbml0aW9uKCkgewogICAgICAvLyDlnKjov5nph4znvJblhpnlgZzmraLkurrohLjor4bliKvnmoTpgLvovpEKICAgICAgdGhpcy52aWRlb1N0cmVhbS5nZXRUcmFja3MoKVswXS5zdG9wKCk7CiAgICB9LAogICAgaGFuZGxlQXZhdGFyU3VjY2VzcyhyZXMpIHsKICAgICAgY29uc29sZS5sb2coIua1i+ivleeFp+eJhyIrcmVzKQogICAgICB0aGlzLmF2YXRhcj0gcmVzCiAgICB9LAogICAgLy8gY29udGludWVSZWNvZ25pdGlvbigpewogICAgLy8gICAgIHZhciBpID0gMDsKICAgIC8vICAgICB3aGlsZSAoaSA8IDUwKXsKICAgIC8vCiAgICAvLyAgICAgfQogICAgLy8gfQogIH0sCn07Cg=="},{"version":3,"sources":["test5.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8BA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"test5.vue","sourceRoot":"src/views/test","sourcesContent":["<template>\n  <div style=\"position: relative;\">\n    <div>\n      <h1 style=\"text-align: center;color: #42b983\">人脸识别</h1>\n      <h2 style=\"color: #42b983;position: absolute;top: 50px;left: 120px;\">摄像头拍摄</h2>\n      <video style=\"width: 400px;height: 400px;\" ref=\"video\" autoplay></video>\n    </div>\n    <el-button type=\"primary\" @click=\"startRecognition\">点击识别</el-button>\n<!--    <el-button type=\"success\" @click=\"continueRecognition\">持续识别</el-button>-->\n    <el-button type=\"danger\" @click=\"stopRecognition\">停止识别</el-button>\n    <div style=\"width: 400px;height: 300px;border: red 1px solid;position: absolute;right: 0px;top: 100px;\" >\n       <img style=\"width: 100%;height: 100%;\" :src=\"avatar\">\n    </div>\n\n    <h2 style=\"position: absolute;right: 120px;top: 50px;color: #42b983\">上传本地图片</h2>\n    <el-upload style=\"display: inline-block; margin-left: 10px\"\n               action=\"http://localhost:9999/file/upload\"\n               :show-file-list=\"false\"\n               :accept=\"'jpg'\"\n               :on-success=\"handleAvatarSuccess\"\n    >\n      <el-button style=\"position: absolute;right: 150px;top: 450px;\" type=\"primary\">上传图片</el-button>\n    </el-upload>\n    <h2 style=\"position: absolute;right: 47%;bottom: -50px;color: #42b983\">对比结果</h2>\n    <div ref=\"tisi\" style=\"position: absolute;width: 400px;height: 200px;border: #1482f0 2px solid;right: 37.5%;bottom: -250px\">\n        <h3 style=\"color: orangered\">匹配率：{{pipeilv}}</h3>\n    </div>\n  </div>\n</template>\n<script>\nconst newElement = document.createElement('h2');\nimport Request from \"@/utils/request\";\nimport axios from \"axios\";\nexport default {\n\n  data() {\n    return {\n      videoStream: null,\n      avatar: 'http://localhost:9999/file/e9f68afaa44e472c8a7c2a46af04aac9.jpg',\n      pipeilv: 0\n    };\n  },\n  mounted() {\n    this.startCamera();\n  },\n  methods: {\n    startCamera() {\n      navigator.mediaDevices\n        .getUserMedia({video: true})\n        .then((stream) => {\n          this.videoStream = stream;\n          this.$refs.video.srcObject = stream;\n          // 开始播放视频\n          this.$refs.video.play();\n        })\n        .catch((error) => {\n          console.log(error);\n        });\n    },\n    startRecognition() {\n      const canvas = document.createElement('canvas');\n      const ctx = canvas.getContext('2d');\n\n      // 设置canvas的宽高和视频流宽高一致\n      canvas.width = this.$refs.video.videoWidth;\n      canvas.height = this.$refs.video.videoHeight;\n      // 绘制视频帧到canvas\n      ctx.drawImage(this.$refs.video, 0, 0, canvas.width, canvas.height);\n      // 获取截取的视频帧的base64 data URL\n      const frameDataUrl = canvas.toDataURL('image/png');\n      // 在控制台打印截取的视频帧的data URL\n      console.log(frameDataUrl)\n      let formData = new FormData();\n      formData.append(\"base64\", frameDataUrl);\n      formData.append(\"localImageUrl\",this.avatar)\n\n      // 在这里编写人脸识别的逻辑\n      Request.post('/video/torenlianshibie', formData).then(res => {\n        console.log(res.split('#'))\n        var ress = res.split('#');\n        this.pipeilv = ress[1];\n        if (ress[0] === 'true'){\n          this.$message({\n            message: \"恭喜你，人脸识别成功啦！！\",\n            type: 'success'\n          });\n          newElement.textContent = '恭喜你，人脸识别成功啦！！！';\n          newElement.style=\"color: green\";\n          this.$refs.tisi.appendChild(newElement);\n        }else {\n          this.$message.error('很遗憾，人脸识别失败，请重新面向摄像头识别！！！');\n          newElement.textContent = '很遗憾，人脸识别失败，请重新面向摄像头识别！！！';\n          newElement.style=\"color: red\";\n          this.$refs.tisi.appendChild(newElement);\n        }\n      })\n    },\n    stopRecognition() {\n      // 在这里编写停止人脸识别的逻辑\n      this.videoStream.getTracks()[0].stop();\n    },\n    handleAvatarSuccess(res) {\n      console.log(\"测试照片\"+res)\n      this.avatar= res\n    },\n    // continueRecognition(){\n    //     var i = 0;\n    //     while (i < 50){\n    //\n    //     }\n    // }\n  },\n};\n</script>\n"]}]}